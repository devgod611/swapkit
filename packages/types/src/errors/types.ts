export enum ERROR_TYPE {
  VALIDATION_ERROR = 'VALIDATION_ERROR',
  RESPONSE_PARSING_ERROR = 'RESPONSE_PARSING_ERROR',
  UNHANDLED_ERROR = 'UNHANDLED_ERROR',
  INCOMPATIBLE_ASSETS_OPERATIONS = 'INCOMPATIBLE_ASSETS_OPERATIONS',
  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',
  UNSUPPORTED_ASSET = 'UNSUPPORTED_ASSET',
  MISSING_INBOUND_INFO = 'MISSING_INBOUND_INFO',
  QUOTE_FETCHING_ERROR = 'QUOTE_FETCHING_ERROR',
  AIRDROP_ERROR = 'AIRDROP_ERROR',
}

export enum ERROR_MODULE {
  // Controllers
  HEALTH_CONTROLLER = '1000',
  LIQUIDITY_CONTROLLER = '1001',
  PROVIDER_CONTROLLER = '1002',
  QUOTE_CONTROLLER = '1003',
  SWAP_CONTROLLER = '1004',
  UTIL_CONTROLLER = '1005',
  AIRDROP_CONTROLLER = '1006',
  // Entities
  PROVIDER_ENTITY = '2001',
  // Providers
  THORCHAIN_PROVIDER = '3001',
  // Utilities
  PROVIDER_UTIL = '4001',
}

export enum ERROR_CODE {
  // Conditions / inputs
  INVALID_INPUT_PARAMETERS = '1000',
  UNKNOWN_PROVIDERS = '1001',
  CANNOT_FIND_INBOUND_ADDRESS = '1002',
  NO_INBOUND_ADDRESSES = '1003',
  CHAIN_HALTED_OR_UNSUPPORTED = '1004',
  MISSING_INPUT_PARAMETER = '1005',
  // Quotes
  SELL_AMOUNT_TOO_LOW = '2000',
  GAS_CONDITIONS_EXPENSIVE = '2001',
  // Thorchain
  THORNODE_QUOTE_GENERIC_ERROR = '3000',
  NOT_ENOUGH_SYNTH_BALANCE = '3001',
  SYNTH_MINTING_CAP_REACHED = '3002',
  // Airdrop
  ADDRESS_NOT_WHITELISTED = '6000',
  ADDRESS_ALREADY_CLAIMED = '6001',
}

export type ErrorInfo = {
  status: number;
  module: ERROR_MODULE;
  message: string;
  code: ERROR_CODE;
  type?: ERROR_TYPE;
  options?: ApiErrorOptions;
  identifier: string;
};

export type ApiErrorOptions = {
  shouldLog?: boolean;
  shouldTrace?: boolean;
  shouldThrow?: boolean;
};
