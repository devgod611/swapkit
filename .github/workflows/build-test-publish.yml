name: Run build, test & publish

on:
  workflow_dispatch:
  push:
    branches:
      - develop
      - main
      - nightly

  pull_request:
    paths:
      - 'packages/**'
      - 'internal/**'
      - 'pnpm.lock'
      - 'package.json'
      - 'turbo.json'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
  NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

jobs:
  build:
    if: contains(github.event.pull_request.title, ':tada:') == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-js-workflow
      - name: Build and check size
        if: github.event_name == 'pull_request'
        uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_step: install

      - name: Build
        if: github.event_name != 'pull_request'
        run: pnpm build

  test:
    if: contains(github.event.pull_request.title, ':tada:') == false
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-js-workflow
      - name: Test
        run: pnpm test:coverage
      - uses: codecov/codecov-action@v3
        with:
          files: ./internal/helpers/coverage/coverage-final.json,./packages/swapkit/swapkit-entities/coverage/coverage-final.json,./packages/toolboxes/toolbox-evm/coverage/coverage-final.json,./packages/swapkit/swapkit-core/coverage/coverage-final.json
          flags: unittests
          name: swapkit-codecov
          fail_ci_if_error: false
          verbose: true

  lint:
    if: contains(github.event.pull_request.title, ':tada:') == false
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-js-workflow
      - name: Lint
        run: pnpm lint

  publish:
    if: contains(github.ref_name, 'develop') || contains(github.ref_name, 'main') || contains(github.ref_name, 'nightly')
    needs: [build, test, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-js-workflow
      - name: Set job params
        shell: bash
        id: deployment-params
        run: |
          echo "version=$([ "${{ github.ref_name }}" = "main" ] && echo "version-release" || echo "version-bump")" >> $GITHUB_OUTPUT
          echo "publishName=$([ "${{ github.ref_name }}" = "main" ] && echo "Release" || echo "Pre-Release")" >> $GITHUB_OUTPUT
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Copy npmrc config
        run: cp .npmrc.prod .npmrc

      - name: Change changeset nightly prelease
        if: contains(github.ref_name, 'nightly')
        run: |
          pnpm changeset pre exit
          pnpm changeset version --snapshot nightly

      - name: Create Pull Request or Publish to npm
        uses: changesets/action@v1
        with:
          title: ":tada: Publish ${{ steps.deployment-params.outputs.publishName }}"
          version: pnpm ${{ steps.deployment-params.outputs.version }}
          publish: pnpm publish-packages
          setupGitUser: false

      - name: Revert changeset nightly prelease
        if: contains(github.ref_name, 'nightly')
        run: |
          pnpm changeset pre enter development

  deploy-playground:
    if: contains(github.ref_name, 'develop')
    needs: [build, test, lint]
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-js-workflow
      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build vite playground
        run: pnpm build:vite

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './apps/vite-playground/dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
